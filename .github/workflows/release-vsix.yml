name: build & attach vsix on release

on:
  release:
    types: [published]        # fires when you click "Publish release"
  push:
    tags:
      - 'v*'                  # e.g., v1.2.3
      - '*.*.*'               # or 1.2.3
  workflow_dispatch:
    inputs:
      ref:
        description: 'Branch or tag to build (e.g., v1.2.3 or main)'
        required: false
        default: ''

permissions:
  contents: write

jobs:
  package:
    runs-on: ubuntu-latest
    steps:
      - name: choose ref
        id: pick
        run: |
          # prefer: dispatch input -> triggering ref -> default branch
          if [ -n "${{ github.event.inputs.ref }}" ]; then
            echo "ref=${{ github.event.inputs.ref }}" >> $GITHUB_OUTPUT
          elif [ -n "${{ github.ref }}" ]; then
            echo "ref=${{ github.ref }}" >> $GITHUB_OUTPUT
          else
            echo "ref=${{ github.event.repository.default_branch }}" >> $GITHUB_OUTPUT
          fi

      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ steps.pick.outputs.ref }}

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: install deps
        run: |
          if [ -f package-lock.json ]; then
            npm ci --no-audit --no-fund
          else
            npm i --no-audit --no-fund
          fi

      - name: package extension (.vsix)
        run: npx @vscode/vsce@latest package

      - name: compute vsix filename
        id: meta
        run: |
          NAME=$(node -p "require('./package.json').name")
          VER=$(node -p "require('./package.json').version")
          echo "file=${NAME}-${VER}.vsix" >> "$GITHUB_OUTPUT"

      - name: upload to GitHub Release (if one exists)
        if: github.event_name == 'release' || startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ steps.meta.outputs.file }}

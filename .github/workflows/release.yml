name: Release VS Code Extension

on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Increment minor version
      id: version
      run: |
        # Get current version from package.json (e.g., "1.0.0")
        CURRENT_VERSION=$(node -p "require('./package.json').version")
        echo "Current version: $CURRENT_VERSION"
        
        # Split version into major.minor.patch
        MAJOR=$(echo $CURRENT_VERSION | cut -d. -f1)
        MINOR=$(echo $CURRENT_VERSION | cut -d. -f2)
        PATCH=$(echo $CURRENT_VERSION | cut -d. -f3)
        
        # Increment minor version and reset patch to 0
        NEW_MINOR=$((MINOR + 1))
        NEW_VERSION="${MAJOR}.${NEW_MINOR}.0"
        
        echo "New version: $NEW_VERSION"
        echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
        
    - name: Update package.json with new version
      run: |
        npm version ${{ steps.version.outputs.version }} --no-git-tag-version
        
    - name: Package extension
      run: npm run package
      
    - name: Publish release to marketplace
      run: npm run publish
      env:
        VSCE_PAT: ${{ secrets.VSCE_PAT }}
        
    - name: Upload VSIX artifact
      uses: actions/upload-artifact@v4
      with:
        name: vsix-release
        path: "*.vsix"
        retention-days: 90
        
    - name: Create GitHub release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.version.outputs.version }}
        release_name: Release v${{ steps.version.outputs.version }}
        body: |
          Release version ${{ steps.version.outputs.version }}
          
          Published to VS Code marketplace as stable release.
        draft: false
        prerelease: false